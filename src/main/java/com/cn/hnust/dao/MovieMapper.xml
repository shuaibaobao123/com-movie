<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.MovieMapper" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.Movie" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="countryId" property="countryid" jdbcType="INTEGER" />
    <result column="typeId" property="typeid" jdbcType="INTEGER" />
    <result column="director" property="director" jdbcType="VARCHAR" />
    <result column="mainAct1" property="mainact1" jdbcType="VARCHAR" />
    <result column="mainAct2" property="mainact2" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="rank" property="rank" jdbcType="DOUBLE" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="isPay" property="ispay" jdbcType="INTEGER" />
    <result column="movieSrc" property="moviesrc" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cn.hnust.pojo.Movie" extends="BaseResultMap" >
    <result column="introduce" property="introduce" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
   <sql id="Example_Where_Clause_Collection" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="or" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  or ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
   <sql id="Example_Where_Clause_query_like" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="or" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  or ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  or ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, name, startDate, countryId, typeId, director, mainAct1, mainAct2, img, rank, 
    count, isPay, movieSrc
  </sql>
  <sql id="Blob_Column_List" >
    introduce
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cn.hnust.pojo.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.hnust.pojo.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} desc
    </if>
     <if test="counts != null and counts!=0" >
     limit ${counts}
    </if>
  </select>
  
  <select id="selectByExampleCollection" resultMap="BaseResultMap" parameterType="com.cn.hnust.pojo.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Collection" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} desc
    </if>
     <if test="counts != null and counts!=0" >
     limit ${counts}
    </if>
  </select>
  
    <select id="selectByExampleQuery" resultMap="BaseResultMap" parameterType="com.cn.hnust.pojo.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_query_like" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} desc
    </if>
     <if test="counts != null and counts!=0" >
     limit ${counts}
    </if>
  </select>
  
  
  
  
   <select id="selectByCounts" resultMap="ResultMapWithBLOBs" parameterType="com.cn.hnust.pojo.MovieExample" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
      order by count desc limit 15
  </select>
  
  <select id="selectByRank" resultMap="ResultMapWithBLOBs" parameterType="com.cn.hnust.pojo.MovieExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
      order by rank desc limit 15
  </select>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from movie
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.hnust.pojo.MovieExample" >
    delete from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.Movie" useGeneratedKeys="true" keyProperty="id">
    insert into movie (name, startDate, 
      countryId, typeId, director, 
      mainAct1, mainAct2, img, 
      rank, count, isPay, 
      movieSrc, introduce)
    values (#{name,jdbcType=VARCHAR}, #{startdate,jdbcType=DATE}, 
      #{countryid,jdbcType=INTEGER}, #{typeid,jdbcType=INTEGER}, #{director,jdbcType=VARCHAR}, 
      #{mainact1,jdbcType=VARCHAR}, #{mainact2,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{rank,jdbcType=DOUBLE}, #{count,jdbcType=INTEGER}, #{ispay,jdbcType=INTEGER}, 
      #{moviesrc,jdbcType=VARCHAR}, #{introduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.Movie" >
    insert into movie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="countryid != null" >
        countryId,
      </if>
      <if test="typeid != null" >
        typeId,
      </if>
      <if test="director != null" >
        director,
      </if>
      <if test="mainact1 != null" >
        mainAct1,
      </if>
      <if test="mainact2 != null" >
        mainAct2,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="ispay != null" >
        isPay,
      </if>
      <if test="moviesrc != null" >
        movieSrc,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=DATE},
      </if>
      <if test="countryid != null" >
        #{countryid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="director != null" >
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="mainact1 != null" >
        #{mainact1,jdbcType=VARCHAR},
      </if>
      <if test="mainact2 != null" >
        #{mainact2,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=DOUBLE},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="ispay != null" >
        #{ispay,jdbcType=INTEGER},
      </if>
      <if test="moviesrc != null" >
        #{moviesrc,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.hnust.pojo.MovieExample" resultType="java.lang.Integer" >
    select count(*) from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update movie
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.countryid != null" >
        countryId = #{record.countryid,jdbcType=INTEGER},
      </if>
      <if test="record.typeid != null" >
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.director != null" >
        director = #{record.director,jdbcType=VARCHAR},
      </if>
      <if test="record.mainact1 != null" >
        mainAct1 = #{record.mainact1,jdbcType=VARCHAR},
      </if>
      <if test="record.mainact2 != null" >
        mainAct2 = #{record.mainact2,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=DOUBLE},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.ispay != null" >
        isPay = #{record.ispay,jdbcType=INTEGER},
      </if>
      <if test="record.moviesrc != null" >
        movieSrc = #{record.moviesrc,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update movie
    set Id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      startDate = #{record.startdate,jdbcType=DATE},
      countryId = #{record.countryid,jdbcType=INTEGER},
      typeId = #{record.typeid,jdbcType=INTEGER},
      director = #{record.director,jdbcType=VARCHAR},
      mainAct1 = #{record.mainact1,jdbcType=VARCHAR},
      mainAct2 = #{record.mainact2,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=DOUBLE},
      count = #{record.count,jdbcType=INTEGER},
      isPay = #{record.ispay,jdbcType=INTEGER},
      movieSrc = #{record.moviesrc,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update movie
    set Id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      startDate = #{record.startdate,jdbcType=DATE},
      countryId = #{record.countryid,jdbcType=INTEGER},
      typeId = #{record.typeid,jdbcType=INTEGER},
      director = #{record.director,jdbcType=VARCHAR},
      mainAct1 = #{record.mainact1,jdbcType=VARCHAR},
      mainAct2 = #{record.mainact2,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=DOUBLE},
      count = #{record.count,jdbcType=INTEGER},
      isPay = #{record.ispay,jdbcType=INTEGER},
      movieSrc = #{record.moviesrc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.Movie" >
    update movie
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="countryid != null" >
        countryId = #{countryid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null" >
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="director != null" >
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="mainact1 != null" >
        mainAct1 = #{mainact1,jdbcType=VARCHAR},
      </if>
      <if test="mainact2 != null" >
        mainAct2 = #{mainact2,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=DOUBLE},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="ispay != null" >
        isPay = #{ispay,jdbcType=INTEGER},
      </if>
      <if test="moviesrc != null" >
        movieSrc = #{moviesrc,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cn.hnust.pojo.Movie" >
    update movie
    set name = #{name,jdbcType=VARCHAR},
      startDate = #{startdate,jdbcType=DATE},
      countryId = #{countryid,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=INTEGER},
      director = #{director,jdbcType=VARCHAR},
      mainAct1 = #{mainact1,jdbcType=VARCHAR},
      mainAct2 = #{mainact2,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=DOUBLE},
      count = #{count,jdbcType=INTEGER},
      isPay = #{ispay,jdbcType=INTEGER},
      movieSrc = #{moviesrc,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.Movie" >
    update movie
    set name = #{name,jdbcType=VARCHAR},
      startDate = #{startdate,jdbcType=DATE},
      countryId = #{countryid,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=INTEGER},
      director = #{director,jdbcType=VARCHAR},
      mainAct1 = #{mainact1,jdbcType=VARCHAR},
      mainAct2 = #{mainact2,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=DOUBLE},
      count = #{count,jdbcType=INTEGER},
      isPay = #{ispay,jdbcType=INTEGER},
      movieSrc = #{moviesrc,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>